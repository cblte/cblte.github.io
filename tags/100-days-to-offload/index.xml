<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>100 Days To Offload on ZN80.NET</title><link>https://cblte.github.io/tags/100-days-to-offload/</link><description>Recent content in 100 Days To Offload on ZN80.NET</description><generator>Hugo -- gohugo.io</generator><language>de</language><copyright>Copyright © 2021, Carsten Brueggenolte.</copyright><lastBuildDate>Fri, 06 Aug 2021 15:31:42 +0200</lastBuildDate><atom:link href="https://cblte.github.io/tags/100-days-to-offload/index.xml" rel="self" type="application/rss+xml"/><item><title>MkDocs mit Docker</title><link>https://cblte.github.io/2021/08/mkdocs-mit-docker/</link><pubDate>Fri, 06 Aug 2021 15:31:42 +0200</pubDate><guid>https://cblte.github.io/2021/08/mkdocs-mit-docker/</guid><description>&lt;p>Die letzten Tage habe ich mit dem Sven an der Matrix-Dokumentation für den Tildeverse-Server envs.net gearbeitet. Nachdem wir erfolglos versucht haben, den Fork der TU-Dresden zu bearbeiten, haben wir uns dau entschlossen, die Dokumentation anstatt mit Hugo doch lieber mit MkDocs umzusetzen. Hinzu kommt, dass MkDocs von Haus aus eine Suchfunktion mitliefert und das nicht extra eingebunden werden muss.&lt;/p>
&lt;p>MkDocs konnte ich lokal mit brew installieren, doch nachdem es ein neues Theme und damit weitere Extensions für MkDocs geben sollte, habe ich mir gedacht: &amp;ldquo;warum soll ich mir mein System mit irgendwelchen Sachen zu müllen, wenn ich dafür doch lieber einen Docker-Container verwenden kann&amp;rdquo;.&lt;/p>
&lt;p>Den lokalen Rechner sauber halten ist keine so schlechte Idee und da MkDocs in Python geschrieben ist, lässt sich das sehr gut in einem Docker-Image verpacken. Das macht es auch für andere Entwickler einfacher, es auf ihrem lokalen Rechner auszuführen.&lt;/p>
&lt;h2 id="docker-image-erstellen">Docker Image erstellen&lt;/h2>
&lt;figure>
&lt;img src="https://cblte.github.io/2021/08/mkdocs-mit-docker/mkdocs-with-docker-01-dockerfile.png" alt="Dockerfile"/> &lt;figcaption>
&lt;p>
Dockerfile im Quell-Verzeichnis
&lt;/p>
&lt;/figcaption>&lt;/figure>
&lt;p>Hier ist das Dockerfile:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span style="color:#000080;font-weight:bold">FROM&lt;/span>&lt;span style="color:#00f"> python:3.9-alpine3.14&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span>&lt;span style="color:#000080;font-weight:bold">LABEL&lt;/span> maintainer=&lt;span style="color:#00f">&amp;#34;cblte@envs.net&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span>&lt;span style="color:#000080;font-weight:bold">LABEL&lt;/span> version=&lt;span style="color:#00f">&amp;#34;1.0&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span>&lt;span style="color:#000080;font-weight:bold">LABEL&lt;/span> description=&lt;span style="color:#00f">&amp;#34;\
&lt;/span>&lt;span style="color:#00f">This Dockerfile installs python3 and pip3 to\
&lt;/span>&lt;span style="color:#00f">then install and run MkDocs with several extensions.&amp;#34;&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">&lt;/span>&lt;span style="color:#000080;font-weight:bold">RUN&lt;/span> pip install &lt;span style="color:#00f">\
&lt;/span>&lt;span style="color:#00f">&lt;/span> mkdocs &lt;span style="color:#00f">\
&lt;/span>&lt;span style="color:#00f">&lt;/span> mkdocs-material &lt;span style="color:#00f">\
&lt;/span>&lt;span style="color:#00f">&lt;/span> pymdown-extensions&lt;span style="color:#a61717;background-color:#e3d2d2">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>So einfach ist das. Wir verwenden das python-Basisimage in der alpine Version welches ca. 100 MB groß ist. Im Image installieren wir dann &lt;code>mkdocs&lt;/code>, das Designpaket &lt;code>mkdocs-material&lt;/code> und das erforderliche &lt;code>pymdown-extensions&lt;/code> Paket.&lt;/p>
&lt;h2 id="image-erstellen">Image Erstellen&lt;/h2>
&lt;p>Erstellt wird das Image mit dem folgenden Befehl:&lt;/p>
&lt;p>&lt;code>docker build -t cblte/mkdocs:1.0 .&lt;/code>&lt;/p>
&lt;p>Der Punkt am Ende ist wichtig, damit Docker das &lt;code>Dockerfile&lt;/code> findet. Mit dem Parameter &lt;code>-t cblte/mkdocs:1.0&lt;/code> legen wir den Tag fest mit auf das Image verwiesen werden kann. Hinter dem Doppelpunkt kann eine Versionsnummer angegeben werden.&lt;/p>
&lt;figure>
&lt;img src="https://cblte.github.io/2021/08/mkdocs-mit-docker/mkdocs-with-docker-02-docker-build.png" alt="Docker Image erstellen"/> &lt;figcaption>
&lt;p>
Docker Image erstellen
&lt;/p>
&lt;/figcaption>&lt;/figure>
&lt;h2 id="docker-container-starten">Docker Container starten&lt;/h2>
&lt;p>Nehmen wir an, die Dateien für die Dokumentation liegen im Verzeichnis &lt;code>$HOME/data/mkdocs-src&lt;/code>. Auf diesen Ordner soll von dem Docker-Container aus zugegriffen werden können. Außerdem möchte ich die Dokumentation vom Container aus über MkDocs bereitstellen und vom Host aus auf dem Entwicklungs-Server zugreifen.&lt;/p>
&lt;p>Folgende Parameter müssen wir verwenden:&lt;/p>
&lt;ul>
&lt;li>&lt;code>-it&lt;/code>: interaktiver modus&lt;/li>
&lt;li>&lt;code>--rm&lt;/code>: nach dem Beenden container löschen&lt;/li>
&lt;li>&lt;code>-p 8888:8000&lt;/code>: den Port 8000 aus dem Container auf dem Host unter Port 8888 verfügbar stellen&lt;/li>
&lt;li>&lt;code>-v '$HOME/data/mkdocs-src':/src&lt;/code>: stelle das lokale Verzeichnis im Container im Verzeichnis &lt;code>/src&lt;/code> zur Verfügung&lt;/li>
&lt;li>&lt;code>cblte/mkdocs:1.0&lt;/code>: das Image welches wir für den Container verwenden wollen&lt;/li>
&lt;li>&lt;code>/bin/sh&lt;/code>: den Befehl den wir ausführen wollen&lt;/li>
&lt;/ul>
&lt;p>Den Container starten wir mit folgendem Befehl:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Shell" data-lang="Shell">docker run -it --rm &lt;span style="color:#00f">\
&lt;/span>&lt;span style="color:#00f">&lt;/span> -p 8888:8000 &lt;span style="color:#00f">\
&lt;/span>&lt;span style="color:#00f">&lt;/span> -v $HOME/data/mkdocs-src:/src &lt;span style="color:#00f">\
&lt;/span>&lt;span style="color:#00f">&lt;/span> cblte/mkdocs:1.0 /bin/sh
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Nachdem der Container gestartet ist, wechseln wir mit &lt;code>cd /src&lt;/code> in das verbundene Verzeichnis und erstellen mit &lt;code>mkdocs new .&lt;/code> ein neues Projekt.&lt;/p>
&lt;figure>
&lt;img src="https://cblte.github.io/2021/08/mkdocs-mit-docker/mkdocs-with-docker-03-run-container-and-commands.png" alt="Run Docker Container from Image"/> &lt;figcaption>
&lt;p>
Docker Container vom Image starten
&lt;/p>
&lt;/figcaption>&lt;/figure>
&lt;p>Dadurch das wir das lokale Verzeichnis mit dem Container verbunden haben, können wir auf dem Host bequeme daran arbeiten.&lt;/p>
&lt;figure>
&lt;img src="https://cblte.github.io/2021/08/mkdocs-mit-docker/mkdocs-with-docker-04-files-on-host.png" alt="Dateien wurden im Verzeichnis auf dem Host erstellt."/> &lt;figcaption>
&lt;p>
Dateien wurden im Verzeichnis auf dem Host erstellt.
&lt;/p>
&lt;/figcaption>&lt;/figure>
&lt;h2 id="mkdocs-server-starten">MkDocs Server starten&lt;/h2>
&lt;p>Den MkDocs Entwicklungsserver starten wir mit folgendem Befehl:&lt;/p>
&lt;p>&lt;code>mkdocs server --liveReload --dev-addr 0.0.0.0:8000&lt;/code>&lt;/p>
&lt;p>Da sich MkDocs standardmäßig an 127.0.0.1 bindet, müssen wir den Parameter &lt;code>--dev-addr&lt;/code> verwenden, um auf den Entwicklungsserver vom Host aus zuzugreifen.&lt;/p>
&lt;figure>
&lt;img src="https://cblte.github.io/2021/08/mkdocs-mit-docker/mkdocs-with-docker-05-run-dev-server.png" alt="Entwicklungsserver von MkDocs starten"/> &lt;figcaption>
&lt;p>
Entwicklungsserver von MkDocs starten
&lt;/p>
&lt;/figcaption>&lt;/figure>
&lt;p>Auf dem Host-Rechner kann unter &lt;code>http://localhost:8888&lt;/code> auf den die Dokumentation zugregriffen werden.&lt;/p>
&lt;figure>
&lt;img src="https://cblte.github.io/2021/08/mkdocs-mit-docker/mkdocs-with-docker-06-website-viewed-on-host.png" alt="MkDocs Webseite auf dem Host aufgerufen"/> &lt;figcaption>
&lt;p>
MkDocs Webseite auf dem Host aufgerufen
&lt;/p>
&lt;/figcaption>&lt;/figure></description></item><item><title>Was Bisher Geschah – Woche 21-30</title><link>https://cblte.github.io/2021/08/was-bisher-geschah-woche-21-30/</link><pubDate>Sun, 01 Aug 2021 14:09:03 +0200</pubDate><guid>https://cblte.github.io/2021/08/was-bisher-geschah-woche-21-30/</guid><description>&lt;figure>
&lt;img src="https://cblte.github.io/2021/08/was-bisher-geschah-woche-21-30/sonntagsfruehstueck.jpg" alt="Sonntagsfrühstück"/> &lt;figcaption>
&lt;p>
Sonntagsfrühstück
&lt;/p>
&lt;/figcaption>&lt;/figure>
&lt;p>Heute ist Sonntag, der 1. August 2021 und es wird wieder einmal Zeit für eine &amp;ldquo;Was Bisher Geschah&amp;rdquo; Beitrag. Der Urlaub bringt so eine Faulheit mit sich, die sich nicht nur auf das Schreiben, sondern auch auf das Lesen auswirkt. Aber lange um den heißen Brei herumreden bringt halt auch nichts! Fangen wir also mit ein paar einfachen Sachen an.&lt;/p>
&lt;p>Wie ich im &lt;a href="https://cblte.github.io/2021/07/was-bisher-geschah-woche-2128/" title="Was Bisher Geschah – Woche 21-28">Beitrag zur KW28&lt;/a> geschrieben habe, war es wirklich schön, mal wieder die Leute vom Stammtisch zu sehen. Am Montagabend haben wir uns dann auch gleich über den Spießbraten hergemacht. Einfach lecker sag ich dir. Gestern haben wir uns erneut ein Stück davon gegönnt und es so richtig genossen. Ordentliche Zwiebeln und noch ein Spiegelei obendrauf. Lecker!&lt;/p>
&lt;h2 id="das-auto">Das Auto&lt;/h2>
&lt;figure>
&lt;img src="https://cblte.github.io/2021/08/was-bisher-geschah-woche-21-30/auto-octavia-sauber-poliert.jpg" alt="Octavia Sauber und Poliert"/> &lt;figcaption>
&lt;p>
Sauber und Poliert
&lt;/p>
&lt;/figcaption>&lt;/figure>
&lt;p>Mein Auto habe ich auch mal wieder gewaschen. Vorletzte Woche hat es ja nicht mehr so viel geregnet und ich konnte ein wenig Autopflege betreiben. Anständig und gründlich waschen, innen aussaugen und anschließend noch mit &lt;a href="https://www.sonax.de/pflegeprodukte/profiline/profiline-polymernetshield/profiline-polymernetshield-340-ml" target="_blank" rel="noopener noreferrer">SONAX Polymer Netshield&lt;/a> Versiegelung einsprühen und polieren. Nachdem ich dann noch den Innenraum mit Surf City Garage Dash Away gereinigt hatte, hat mein Nachbar gefragt, ob ich mir ein neues Auto gekauft hätte. Das macht einen dann schon ein wenig stolz.&lt;/p>
&lt;h2 id="altkleidersammlung">Altkleidersammlung&lt;/h2>
&lt;figure>
&lt;img src="https://cblte.github.io/2021/08/was-bisher-geschah-woche-21-30/altkleidercontainer.jpg" alt="Altkleidercontainer in den Niederlanden"/> &lt;figcaption>
&lt;p>
Ein Altkleidercontainer bei uns um die Ecke
&lt;/p>
&lt;/figcaption>&lt;/figure>
&lt;p>Die Woche ist auch meine Probebestellung von neuen T-Shirts angekommen. Ich hatte Camel, Goodthreads und Meraki bestellt. Leider sind die T-Shirts von Camel viel zu lang und liegen in XL viel zu eng an. Da fühle ich mich nicht wohl drin und das sieht auch nicht gut aus. Behalten habe ich die von Goodthreads und Meraki. Die sind auch XL und fühlen sich vom Stoff her gut an, passen von der Größe und sitzen gut.&lt;/p>
&lt;p>Warum ich neue T-Shirts bestellt habe? Ganz einfach: Ich habe den Kleiderschrank aufgeräumt und dabei über 40 alte T-Shirt in die Altkleidersammlung gegeben. Dazu noch fünf Hosen und ein paar andere Dinge. Alles Klamotten, die ich seitdem wir hier in den Niederlanden wohnen, nicht angezogen habe und unnötig im Schrank liegen. Etwas komisch war es schon, mich von dem ein oder anderen Lieblingsshirt zu trennen. Ein Paar durfte ich aber behalten.&lt;/p>
&lt;p>Auf der anderen Seite aus betrachtet, ist es morgens nun sehr viel einfacher geworden. Denn anstatt sich fuur eines von 40 T-Shirts zu entscheiden, nehme ich einfach das was oben drauf liegt. Manchmal ist weniger halt viel mehr!&lt;/p>
&lt;h2 id="dinge-online-verkaufen">Dinge online verkaufen&lt;/h2>
&lt;p>Ein paar der &amp;ldquo;alten&amp;rdquo; Sachen möchte ich nicht unbedingt wegwerfen. Ich habe also Fotos gemacht und die kleinen Drohnen und meine alte Canon 450D mit den Objektiven auf den Online-Verkaufsplattformen eingestellt. Vorher habe ich mich ein wenig umgeschaut, wie viel andere Personen für ähnliche Dinge verlangen und meine Preisvorstellungen entsprechend angepasst. Doch was da manchmal für Fragen mit Angeboten hereinkommen, unglaublich!&lt;/p>
&lt;p>Für ein wirklich gut erhaltenes Sigma 70-200mm wird im Internet noch knapp 500 Euro verlangt. Das ist viel Geld, das weiß ich. Ok, mein Sigma 70-200 ist etwas abgenutzt, hat ein paar kleine Schrammen hier und da und der Lack ist auch nicht mehr ganz neu, aber das Glas ist noch in tadellosem Zustand! Daher hätte ich schon gerne so um die 400 Euro dafür. Ich denke, dass das ein guter Preis ist, sind doch zwei UV-Filter, eine Tragetasche und die Stativ-Halterung noch vorhanden.&lt;/p>
&lt;p>Einer wollte von mir, dass ich es ihm schenke. Er hätte kein Geld und würde aber gerne mit der Fotografie anfangen. Wieder ein anderer wollte mir nur die Hälfte geben und nachdem ich ihn gefragt habe, ob er auch ein seriöses Angebot machen wolle, schickt er mir ein Bild von einer Kamera mit einem Objektiv darauf. Keine Ahnung was mir das sagen sollte, aber ich habe ihm dann auch ein Bild geschickt. Darauf hin hat er mich als Respekt und Empathielos betitelt und mir einige Ratschläge im Umgang mit Menschen geschickt. Ich habe die Unterhaltung an dieser Stelle dann abgebrochen. Also manchmal.&lt;/p>
&lt;p>Von der einen Drohne habe ich zwei Stück und das auch so in der Anzeige beschrieben, dass der Preis von 25 Euro pro Drohne gilt. Da kommen dann so anfragen wie &amp;ldquo;10 Euro für beide&amp;rdquo;, &amp;ldquo;Ich hätte gerne beide Drohnen, habe aber nur Geld für eine, ob ich ihm die zweite nicht einfach dazu geben könnte&amp;rdquo;. Ich finde solche Angebote nicht nur dreist und unverschämt, sondern auch eine derartige Zeitverschwendung, dass ich mir wirklich überlege, die nicht doch einfach zu entsorgen. Dann werden die Batterien und der Elektrokram wenigstens anständig entsorgt und landen nicht, wie bei wahrscheinlich vielen anderen, einfach im Hausmüll. Hier in den Niederlanden wird ja nicht so auf Mülltrennung geachtet wie in Deutschland.&lt;/p>
&lt;h2 id="kein-pfeifen-mehr-aus-dem-wandschrank">Kein pfeifen mehr aus dem Wandschrank&lt;/h2>
&lt;p>Das Pfeifen hat ein Ende! Der Monteur von Eneco war hier und hat gleich mal die ganze Einheit ausgetauscht. Mir soll es recht sein. Das Pfeifen hat ein Ende, die neue Wärmetauscher-Einheit ist etwas kleiner und dazu noch Energie effizienter. Was will man also mehr?&lt;/p>
&lt;p>Einmal alt:&lt;/p>
&lt;figure>
&lt;img src="https://cblte.github.io/2021/08/was-bisher-geschah-woche-21-30/stadsverwarming-alt.jpg" alt="Alte Einheit"/> &lt;/figure>
&lt;p>gegen neu:&lt;/p>
&lt;figure>
&lt;img src="https://cblte.github.io/2021/08/was-bisher-geschah-woche-21-30/stadsverwarming-neu.jpg" alt="Neue Einheit"/> &lt;/figure>
&lt;p>und damit nun einen&lt;/p>
&lt;h2 id="schönen-sonntag-noch">Schönen Sonntag noch&lt;/h2>
&lt;figure>
&lt;img src="https://cblte.github.io/2021/08/was-bisher-geschah-woche-21-30/photo-adriel-kloppenburg-unsplash.jpg" alt="photo-adriel-kloppenburg-unsplash"/> &lt;figcaption>
&lt;p>
&lt;a href="https://unsplash.com/photos/EKIyHUrUHWU">Photo / Adriel Kloppenburg / unsplash&lt;/a>
&lt;/p>
&lt;/figcaption>&lt;/figure>
&lt;p>So, das war es auch schon wieder. Abgesehen von den oben genannten Dingen habe ich mein MacBook ein wenig gestresst und viel Arbeit damit erledigt. Ich kann nur noch einmal betonen, dass die Akkuleistung einfach unglaublich ist und hoffe, dass das über die Jahre auch so bleibt.&lt;/p>
&lt;p>Ich werde mich jetzt endlich mal an meinen neuen Python-Kurs begeben und den Sonntag genießen. Heute Abend gibt es super leckere Bolognese, eine Spezialität meiner Frau!&lt;/p>
&lt;p>Oh, eines fällt mir gerade noch ein. Morgen haben wir einen Termin bei einem Autohändler. Wir möchten uns mit der Elektromobilität auseinandersetzen und lassen uns einen Opel Corsa-E zeigen. Ich bin mal gespannt wie der Opel Corsa-E sich verhält und was wir alles beachten müssen in puncto Laden und Hausanschluss etc. Da wir nur zur Miete wohnen ist das auch nicht immer ganz so einfach. Hier in Den Haag geht das, denn wir haben genug Ladesäulen in der Nachbarschaft. Sorgen mache ich mir nur über die Rückkehr nach Deutschland.&lt;/p>
&lt;hr>
&lt;p>Mehr interessantes Zeug findest du beim &lt;a href="https://dn15.de/" target="_blank" rel="noopener noreferrer">dn15&lt;/a>, beim &lt;a href="https://happybuddha1975.de/" target="_blank" rel="noopener noreferrer">happybuddha1975&lt;/a> und natürlich beim &lt;a href="https://monstropolis.wordpress.com/" target="_blank" rel="noopener noreferrer">monstropolis&lt;/a>. Ich wünsche dir noch einen schönen Sonntagnachmittag oder -abend oder Montag morgen und einen guten Start in die Woche!&lt;/p></description></item><item><title>Happy SysAdmin Day 2021</title><link>https://cblte.github.io/2021/07/happy-sysadmin-day-2021/</link><pubDate>Fri, 30 Jul 2021 20:39:43 +0200</pubDate><guid>https://cblte.github.io/2021/07/happy-sysadmin-day-2021/</guid><description>&lt;figure>
&lt;img src="https://cblte.github.io/2021/07/happy-sysadmin-day-2021/2021-07-30-happysysadmin-day-2021.png" alt="Happy SysAdmin Day 2021"/> &lt;figcaption>
&lt;p>
Happy SysAdmin Day 2021
&lt;/p>
&lt;/figcaption>&lt;/figure>
&lt;blockquote>
&lt;p>Ständig neue Hardware, Outsourcing, Automatisierung, Virtualisierung: Wer heute Sysadmin ist, muss sich spezialisieren, ständig weiterbilden und hat mit viel komplexeren Systemen zu tun als früher. Man muss quasi immer mit dem Ohr an der Festplatte hängen. (&lt;a href="https://www.golem.de/news/sysadmin-day-2021-immer-mit-dem-ohr-an-der-festplatte-2107-158491.html" target="_blank" rel="noopener noreferrer">Golem&lt;/a>)&lt;/p>
&lt;/blockquote>
&lt;p>Gerne würde ich in meiner Firma auch mehr im Bereich der Systemadministration arbeiten, doch leider bin ich an meinen Programmierer-Posten gebunden. Aber das soll hat mich noch nie davon abhalten, auch mal bei den Kollegen auf einen Kaffee und einen Schnack vorbeizuschauen. Ich bin zumindest heilfroh, dass ich gute SysAdmins habe die meine Entwicklersysteme immer am laufen halten!&lt;/p>
&lt;p>&lt;strong>Happy SysAdmin Day 2021&lt;/strong>&lt;/p>
&lt;p>Mehr zum Sysadmin Day 2021 gibt es übrigens auf &lt;a href="https://sysadminday.com/">https://sysadminday.com/&lt;/a>&lt;/p></description></item><item><title>Microblog überarbeitet</title><link>https://cblte.github.io/2021/07/microblog-ueberarbeitet/</link><pubDate>Thu, 29 Jul 2021 21:30:09 +0200</pubDate><guid>https://cblte.github.io/2021/07/microblog-ueberarbeitet/</guid><description>&lt;p>Ich habe mich heute mal hingesetzt und den Microblog überarbeitet. Dadurch das ich mit ganz vielen Dateien und einer etwas komplizierten Ordner Struktur angefangen habe, wurde das irgendwann ziemlich aufwendig, neue Beiträge zu erstellen.&lt;/p>
&lt;p>Erst habe ich versucht alle Beiträge in einer Datei zu sammeln. Eine Datei pro Jahr sollte ausreichen. Dazu habe ich ein kleines Python Script geschrieben.&lt;/p>
&lt;script type="application/javascript" src="https://gist.github.com/cblte/35b465933fc84b7cf44a2d2e7615fe10.js">&lt;/script>
&lt;p>Alle Beiträge waren nur in einer Datei und nach ein wenig hin und her und umformatieren, hatte ich auch ein passables Ergebnis.&lt;/p>
&lt;p>Das Template für den Blog sah dann so aus:&lt;/p>
&lt;script type="application/javascript" src="https://gist.github.com/cblte/4868dca0a22332103a61559fdbcc5931.js">&lt;/script>
&lt;p>Auch wenn die Änderungen auf den ersten Blick ganz gut ausgesehen haben, so hat es leider nicht mehr mit dem RSS-Feed funktioniert. Da alle Beiträge in einer Datei sind, ist der RSS Feed viel zu kurz und ich möchte das niemandem zumuten, ständig den gesamten Feed zu laden. Also musste ich eine andere Lösung finden.&lt;/p>
&lt;p>Nach einigem Hin und Her bin ich dann doch wieder bei einzelnen Dateien gelandet. Dieses Mal allerdings ohne &lt;a href="https://gohugo.io/content-management/front-matter/" target="_blank" rel="noopener noreferrer">Frontmatter&lt;/a>. Der Dateinamen, bestehend aus Jahreszahl, einem Punkt und einer fortlaufenden Nummer.&lt;/p>
&lt;p>Das Python Script habe ich dazu ein wenig umgeschrieben und erzeugt nun Dateien nach dem oben beschriebenen Schema.&lt;/p>
&lt;script type="application/javascript" src="https://gist.github.com/cblte/f53266e41256920881fa2dfaac453130.js">&lt;/script>
&lt;p>Das dazugehörige Template &lt;code>list.html&lt;/code> musste ich ebenfalls ändern und sieht nun so aus:&lt;/p>
&lt;script type="application/javascript" src="https://gist.github.com/cblte/88071de50d95908c751173afb2515c24.js">&lt;/script>
&lt;p>Der obere Teil (Zeile 2-7) transkludiert die Inhalte der &lt;code>_index.md&lt;/code>-Datei. Dabei wird auch die Zahl im Dokument durch einen Link ersetzt.&lt;/p>
&lt;p>Ab Zeile 9 werden dann alle vorhandenen Dateien verarbeitet. Der Dateiname wir vorne abgeschnitten und die führenden Nullen werden ebenfalls entfernt, um die Zahl für die Webseite zu erzeugen (Zeile 10). Danach wird ein Link erzeugt (Zeile 11) der anschließend vorne vor den Beitrag gesetzt (Zeile 12) wird.&lt;/p>
&lt;p>Der erzeugte Link mit der Nummer kann benutzt werden, um auf den Beitrag zu verlinken oder diesen Direkt anzuspringen. Sprich die Zahl kann als Sprungmarke genutzt werden, um direkt zum Eintrag im Microblog zu springen. Zum Beispiel zum &lt;a href="https://cblte.github.io/microblog/#55">Eintrag #55&lt;/a>.&lt;/p>
&lt;p>Im großen ganzen kann man sagen, dass ich mit all den Änderungen die Dateistruktur vereinfacht und die Anzeige (zumindest für mich) verbessert habe.&lt;/p></description></item></channel></rss>